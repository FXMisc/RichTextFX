/*
 * THIS CODE WAS AUTOGENERATED BY ANTLR4
 * You cannot modify generated code files. Do not attempt to make any changes to this file.
 *
 * checkout our wiki article on ANTLR for more details:
 * https://github.com/EmpowerOperations/OASIS/wiki/ANTLR
 */

    package org.fxmisc.richtext.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

/*
 * THIS CODE WAS AUTOGENERATED BY ANTLR4
 * You cannot modify generated code files. Do not attempt to make any changes to this file.
 *
 * checkout our wiki article on ANTLR for more details:
 * https://github.com/EmpowerOperations/OASIS/wiki/ANTLR
 */
@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TestLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__5=1, T__4=2, T__3=3, T__2=4, T__1=5, T__0=6, DIRECT_TO_TOKEN=7, NONTERMINAL_TOKEN=8, 
		BRACKET_LABEL=9, LITERAL=10, SEMI_COLON=11, OPEN_PAREN=12, CLOSE_PAREN=13, 
		OPEN_CURLEY=14, CLOSE_CURLEY=15, LOWER_A=16, LOWER_B=17, LOWER_C=18, COMMENT=19, 
		LINEBREAKS=20;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'"
	};
	public static final String[] ruleNames = {
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "DIRECT_TO_TOKEN", "NONTERMINAL_TOKEN", 
		"BRACKET_LABEL", "LITERAL", "SEMI_COLON", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_CURLEY", "CLOSE_CURLEY", "LOWER_A", "LOWER_B", "LOWER_C", "COMMENT", 
		"LINEBREAKS"
	};


	public TestLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TestLang.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\26\u008b\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3"+
		"\b\3\t\3\t\3\t\5\t[\n\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3"+
		"\n\3\n\3\13\6\13k\n\13\r\13\16\13l\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17"+
		"\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\24\7\24\u0083"+
		"\n\24\f\24\16\24\u0086\13\24\3\25\3\25\3\25\3\25\2\2\26\3\3\5\4\7\5\t"+
		"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26\3\2\5\3\2\62;\4\2\f\f\17\17\5\2\f\f\17\17\"\"\u008e\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\3+\3\2\2\2\5-\3\2\2\2\7=\3\2\2\2\t"+
		"?\3\2\2\2\13Q\3\2\2\2\rS\3\2\2\2\17U\3\2\2\2\21Z\3\2\2\2\23\\\3\2\2\2"+
		"\25j\3\2\2\2\27n\3\2\2\2\31p\3\2\2\2\33r\3\2\2\2\35t\3\2\2\2\37v\3\2\2"+
		"\2!x\3\2\2\2#z\3\2\2\2%|\3\2\2\2\'~\3\2\2\2)\u0087\3\2\2\2+,\7\61\2\2"+
		",\4\3\2\2\2-.\7F\2\2./\7K\2\2/\60\7T\2\2\60\61\7G\2\2\61\62\7E\2\2\62"+
		"\63\7V\2\2\63\64\7a\2\2\64\65\7V\2\2\65\66\7Q\2\2\66\67\7a\2\2\678\7V"+
		"\2\289\7Q\2\29:\7M\2\2:;\7G\2\2;<\7P\2\2<\6\3\2\2\2=>\7,\2\2>\b\3\2\2"+
		"\2?@\7P\2\2@A\7q\2\2AB\7p\2\2BC\7v\2\2CD\7g\2\2DE\7t\2\2EF\7o\2\2FG\7"+
		"k\2\2GH\7p\2\2HI\7c\2\2IJ\7n\2\2JK\7V\2\2KL\7q\2\2LM\7m\2\2MN\7g\2\2N"+
		"O\7p\2\2OP\7<\2\2P\n\3\2\2\2QR\7-\2\2R\f\3\2\2\2ST\7/\2\2T\16\3\2\2\2"+
		"UV\7C\2\2V\20\3\2\2\2W[\5!\21\2X[\5#\22\2Y[\5%\23\2ZW\3\2\2\2ZX\3\2\2"+
		"\2ZY\3\2\2\2[\22\3\2\2\2\\]\7D\2\2]^\7t\2\2^_\7c\2\2_`\7e\2\2`a\7m\2\2"+
		"ab\7g\2\2bc\7v\2\2cd\7J\2\2de\7g\2\2ef\7n\2\2fg\7n\2\2gh\7<\2\2h\24\3"+
		"\2\2\2ik\t\2\2\2ji\3\2\2\2kl\3\2\2\2lj\3\2\2\2lm\3\2\2\2m\26\3\2\2\2n"+
		"o\7=\2\2o\30\3\2\2\2pq\7*\2\2q\32\3\2\2\2rs\7+\2\2s\34\3\2\2\2tu\7}\2"+
		"\2u\36\3\2\2\2vw\7\177\2\2w \3\2\2\2xy\7c\2\2y\"\3\2\2\2z{\7d\2\2{$\3"+
		"\2\2\2|}\7e\2\2}&\3\2\2\2~\177\7\61\2\2\177\u0080\7\61\2\2\u0080\u0084"+
		"\3\2\2\2\u0081\u0083\n\3\2\2\u0082\u0081\3\2\2\2\u0083\u0086\3\2\2\2\u0084"+
		"\u0082\3\2\2\2\u0084\u0085\3\2\2\2\u0085(\3\2\2\2\u0086\u0084\3\2\2\2"+
		"\u0087\u0088\t\4\2\2\u0088\u0089\3\2\2\2\u0089\u008a\b\25\2\2\u008a*\3"+
		"\2\2\2\6\2Zl\u0084\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}