apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.fxmisc.richtext'

dependencies {
    compile group: 'org.reactfx', name: 'reactfx', version: '2.0-SNAPSHOT'
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.5.2-1'
    compile (group: 'org.fxmisc.undo', name: 'undofx', version: '1.2') {
        transitive = false
    }
    compile (group: 'org.fxmisc.flowless', name: 'flowless', version: '0.5-SNAPSHOT') {
        transitive = false
    }
    compile 'com.google.guava:guava:19.0'
    compile group: 'org.fxmisc.wellbehaved', name: 'wellbehavedfx', version: '[0.1.1,0.2)'
    testCompile group: 'junit', name: 'junit', version: '[4.0,5)'
}

javadoc {
    // ignore missing Javadoc comments or tags
    options.addStringOption('Xdoclint:all,-missing', '-quiet')

    // support for JavaFX properties
    options.addBooleanOption('javafx', true);

    // resolve links to Java and JavaFX Javadocs
    options.links = [
        'http://docs.oracle.com/javase/8/docs/api/',
        'http://docs.oracle.com/javase/8/javafx/api/'
    ]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

signArchives.onlyIf {
    project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')
}

def doUploadArchives = project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')

if(doUploadArchives) {
    uploadArchives {
        repositories.mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'RichTextFX'
                packaging 'jar'
                description 'Rich-text area for JavaFX'
                url 'http://www.fxmisc.org/richtext/'
           
                scm {
                    url 'scm:git@github.com:TomasMikula/RichTextFX.git'
                    connection 'scm:git@github.com:TomasMikula/RichTextFX.git'
                    developerConnection 'scm:git@github.com:TomasMikula/RichTextFX.git'
                }
           
                licenses {
                    license {
                        name 'The BSD 2-Clause License'
                        url 'http://opensource.org/licenses/BSD-2-Clause'
                        distribution 'repo'
                    }
                    license {
                        name 'GPLv2 with the Classpath Exception'
                        url 'http://www.gnu.org/software/classpath/license.html'
                        distribution 'repo'
                    }
                }
           
                developers {
                    developer {
                        name 'Tomas Mikula'
                    }
                }
            }
        }
    }
}

uploadArchives.onlyIf { doUploadArchives }

task fatJar(type: Jar, dependsOn: classes) {
    appendix = 'fat'
    from sourceSets.main.output
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

assemble.dependsOn fatJar
