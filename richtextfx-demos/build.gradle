apply plugin: 'antlr'
apply plugin: 'kotlin'
apply plugin: 'antlr'

dependencies {
    compile project(":richtextfx")
    antlr "org.antlr:antlr4:4.5"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}


sourceSets{
    gen{
        java.srcDir "${projectDir}/src/gen/java"
    }
    main.java.srcDirs += 'src/main/kotlin'
}

compileJava{
    dependsOn(generateGrammarSource)
    source += sourceSets.gen.java
}

generateGrammarSource {
    outputDirectory = new File("${project.rootDir}/richtextfx-demos/src/gen/java/org/fxmisc/richtext/parser".toString())
}

task fatJar(type: Jar, dependsOn: classes) {
    appendix = 'fat'
    from sourceSets.main.output
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
}

assemble.dependsOn fatJar

task JavaKeywords(type: JavaExec, dependsOn: classes) {
    main = 'org.fxmisc.richtext.demo.JavaKeywords'
    classpath = files(sourceSets.main.output, configurations.runtime)
}

task JavaKeywordsAsync(type: JavaExec, dependsOn: classes) {
    main = 'org.fxmisc.richtext.demo.JavaKeywordsAsync'
    classpath = files(sourceSets.main.output, configurations.runtime)
}

task XMLEditor(type: JavaExec, dependsOn: classes) {
    main = 'org.fxmisc.richtext.demo.XMLEditor'
    classpath = files(sourceSets.main.output, configurations.runtime)
}

task ManualHighlighting(type: JavaExec, dependsOn: classes) {
    main = 'org.fxmisc.richtext.demo.ManualHighlighting'
    classpath = files(sourceSets.main.output, configurations.runtime)
}

task RichText(type: JavaExec, dependsOn: classes) {
    main = 'org.fxmisc.richtext.demo.richtext.RichText'
    classpath = files(sourceSets.main.output, configurations.runtime)
}

task PopupDemo(type: JavaExec, dependsOn: classes) {
    main = 'org.fxmisc.richtext.demo.PopupDemo'
    classpath = files(sourceSets.main.output, configurations.runtime)
}

task TooltipDemo(type: JavaExec, dependsOn: classes) {
    main = 'org.fxmisc.richtext.demo.TooltipDemo'
    classpath = files(sourceSets.main.output, configurations.runtime)
}
buildscript {
    ext.kotlin_version = '1.0.1-2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
